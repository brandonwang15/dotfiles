#256 color terminal
# So that vim uses correct colors 
set -g default-terminal "screen-256color"

#Use vim key layout
set-window-option -g mode-keys vi

set -g history-limit 50000
bind-key / copy-mode \; command-prompt -p "Search Up:" 'send-keys ? C-u %% Enter'
set -g escape-time 0
set -g repeat-time 250
bind-key C-u copy-mode -u

# Allow scrolling with mouse (i think?)
set-option -g mouse on
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"  
bind-key -n WheelDownPane select-pane -t= \; send-keys -M 

# Use Alt-arrow keys without prefix key to switch panes
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# Shift arrow to switch windows
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Open new panes and windows in CWD
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# Copy to system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Clear scrollback buffer
bind BSpace "send-keys clear C-m; clear-history"

#### ##############
#### Design Changes
#### ##############
# to generate color list:
# `for i in {0..255}; do  printf "\x1b[38;5;${i}mcolor%-5i\x1b[0m" $i ; if ! (( ($i + 1 ) % 8 )); then echo ; fi ; done`


#  modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9'

# Status bar
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour14 fg=colour137'
set -g status-left ''
#set -g status-right '#[fg=colour17,bg=colour214] %d/%m #[fg=colour214,bg=colour17] %H:%M:%S '

set -g status-right '#[fg=colour17,bg=colour214] %a %m/%d #[fg=colour214,bg=colour17 bold] %l:%M %P ' 
#set -g status-right-length 50
#set -g status-left-length 20

setw -g window-status-current-style 'fg=colour214 bg=colour27 bold'
setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '

setw -g window-status-style 'fg=colour9 bg=colour14'
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '


#TMUX Command Wishlist
#Way to peek into next window, by showing window on key down and releasing on key up. I'm not sure if this is even possible with TMUX keybindings

#TMUX theme
#source-file "${HOME}/.tmux-themepack/basic.tmuxtheme"


# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
